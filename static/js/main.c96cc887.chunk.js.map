{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFireStore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","div","initial","width","animate","UploadForm","types","htmlFor","type","id","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","ImageGrid","setSelectedImg","console","log","map","key","layout","whileHover","opacity","onClick","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c96cc887.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Private Gallery</h2>\n      <p>Save Your Personal Picture Here.</p>\n    </div>\n  );\n};\n\nexport default Title;\n","import * as firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/firestore\";\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDqugsKJrf8LNZXLgAIjNM5lgp0qaRZGkM\",\r\n  authDomain: \"excaldev-firegram.firebaseapp.com\",\r\n  databaseURL: \"https://excaldev-firegram.firebaseio.com\",\r\n  projectId: \"excaldev-firegram\",\r\n  storageBucket: \"excaldev-firegram.appspot.com\",\r\n  messagingSenderId: \"1055937199405\",\r\n  appId: \"1:1055937199405:web:5db333c6ffc5f90c0867a4\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFireStore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { projectStorage, projectFireStore, timestamp };\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  projectStorage,\r\n  projectFireStore,\r\n  timestamp,\r\n} from \"../firebase/config\";\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    //   references\r\n    const storageRef = projectStorage.ref(file.name);\r\n    const collectionRef = projectFireStore.collection(\"images\");\r\n\r\n    storageRef.put(file).on(\r\n      \"state_changed\",\r\n      (snap) => {\r\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        setProgress(percentage);\r\n      },\r\n      (err) => {\r\n        setError(err);\r\n      },\r\n      async () => {\r\n        const url = await storageRef.getDownloadURL();\r\n        const createdAt = timestamp();\r\n        collectionRef.add({ url, createdAt });\r\n        setUrl(url);\r\n      }\r\n    );\r\n  }, [file]);\r\n  return { progress, url, error };\r\n};\r\nexport default useStorage;\r\n","import React from \"react\";\r\nimport useStorage from \"../hooks/useStorage\";\r\nimport { useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n  const { url, progress } = useStorage(file);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      setFile(null);\r\n    }\r\n  }, [url, setFile]);\r\n  return (\r\n    <motion.div\r\n      initial={{ width: 0 }}\r\n      className=\"progress-bar\"\r\n      animate={{ width: progress + \"%\" }}\r\n    ></motion.div>\r\n  );\r\n};\r\nexport default ProgressBar;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nconst UploadForm = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const types = [\"image/png\", \"image/jpeg\"];\r\n\r\n  const changeHandler = (e) => {\r\n    let selected = e.target.files[0];\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError(\"\");\r\n    } else {\r\n      setFile(null);\r\n      setError(\"Format Gambar Harus png atau jpeg\");\r\n    }\r\n  };\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"file\">\r\n        <span>+</span>\r\n        <input type=\"file\" id=\"file\" onChange={changeHandler} />\r\n      </label>\r\n\r\n      <div className=\"output\">\r\n        {error && <div className=\"error\">{error}</div>}\r\n        {file && <div>{file.name}</div>}\r\n        {file && <ProgressBar file={file} setFile={setFile} />}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default UploadForm;\r\n","import { useState, useEffect } from \"react\";\r\nimport { projectFirestore, projectFireStore } from \"../firebase/config\";\r\n\r\nconst useFirestore = (collection) => {\r\n  const [docs, setDocs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsub = projectFireStore\r\n      .collection(collection)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snap) => {\r\n        let documents = [];\r\n        snap.forEach((doc) => {\r\n          documents.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setDocs(documents);\r\n      });\r\n\r\n    return () => unsub();\r\n  }, [collection]);\r\n  return { docs };\r\n};\r\nexport default useFirestore;\r\n","import React from \"react\";\r\nimport useFirestore from \"../hooks/useFirestore\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n  const { docs } = useFirestore(\"images\");\r\n  console.log(docs);\r\n  return (\r\n    <div className=\"img-grid\">\r\n      {docs &&\r\n        docs.map((doc) => (\r\n          <motion.div\r\n            className=\"img-wrap\"\r\n            key={doc.id}\r\n            layout\r\n            whileHover={{ opacity: 1 }}\r\n            onClick={() => setSelectedImg(doc.url)}\r\n          >\r\n            <motion.img\r\n              src={doc.url}\r\n              alt=\"uploaded pic\"\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ delay: 0.5 }}\r\n            />\r\n          </motion.div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageGrid;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst Modal = ({ selectedImg, setSelectedImg }) => {\r\n  const handleClick = (e) => {\r\n    if (e.target.classList.contains(\"backdrop\")) {\r\n      setSelectedImg(null);\r\n    }\r\n  };\r\n  return (\r\n    <motion.div\r\n      className=\"backdrop\"\r\n      onClick={handleClick}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n    >\r\n      <motion.img\r\n        src={selectedImg}\r\n        alt=\"enlarged pic\"\r\n        initial={{ y: \"-100vh\" }}\r\n        animate={{ y: 0 }}\r\n      />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\nimport Title from \"./comps/Title\";\nimport UploadForm from \"./comps/UploadForm\";\nimport ImageGrid from \"./comps/ImageGrid\";\nimport Modal from \"./comps/Modal\";\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n  return (\n    <div className=\"App\">\n      <Title />\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      {selectedImg && (\n        <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}